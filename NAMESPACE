# Generated by roxygen2: do not edit by hand

S3method(ICER,SummaryReport)
S3method(ascii,ICER.SummaryReport)
S3method(ascii,SummaryReport)
S3method(print,SummaryReport)
S3method(print,summary.SummaryReport)
S3method(rbind,SummaryReport)
S3method(summary,SummaryReport)
export("enum<-")
export(ICER)
export(LdFlags)
export(RNGStream)
export(RNGstate)
export(advance.substream)
export(callCalibrationPerson)
export(callIllnessDeath)
export(callPersonSimulation)
export(callSimplePerson)
export(callSimplePerson2)
export(discountedInterval)
export(discountedPoint)
export(enum)
export(frontier)
export(inlineCxxPlugin)
export(microsimulation.exit)
export(microsimulation.init)
export(next.user.Random.substream)
export(pqueue)
export(pqueue__cancel)
export(pqueue__clear)
export(pqueue__empty)
export(pqueue__new)
export(pqueue__pop)
export(pqueue__push)
export(r_create_current_stream)
export(r_get_user_random_seed)
export(r_next_rng_substream)
export(r_remove_current_stream)
export(r_rng_advance_substream)
export(r_set_user_random_seed)
export(rnormPos)
export(set.user.Random.seed)
export(signed)
export(unsigned)
export(user.Random.seed)
exportClasses(EventQueue)
exportClasses(PQueueRef)
exportClasses(RNGStream)
import(Rcpp)
import(methods)
importFrom(ascii,ascii)
importFrom(graphics,lines)
importFrom(graphics,plot)
importFrom(stats,predict)
importFrom(stats,rnorm)
importFrom(stats,sd)
useDynLib(microsimulation, .registration=TRUE)
